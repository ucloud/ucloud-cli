// Code is generated by ucloud-model, DO NOT EDIT IT.

package ucompshare

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// UCompShare API Schema

// CreateULHostInstanceRequest is request schema for CreateULHostInstance action
type CreateULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 套餐ID。如："ulh.c1m1s40b30t800"
	BundleId *string `required:"true"`

	// 计费模式。枚举值： \\ > Year，按年付费； \\ > Month，按月付费；默认：Month
	ChargeType *string `required:"false"`

	// 主机代金券ID。请通过DescribeCoupon接口查询，或登录用户中心查看
	CouponId *string `required:"false"`

	// 镜像ID。 请通过 [DescribeImage](describe_image.html)获取
	ImageId *string `required:"true"`

	// 轻量应用主机名称。默认：套餐ID。请遵照[[api:uhost-api:specification|字段规范]]设定实例名称。
	Name *string `required:"false"`

	// ULHost密码。请遵照[[api:uhost-api:specification|字段规范]]设定密码。密码需使用base64进行编码，举例如下：# echo -n Password1 | base64
	Password *string `required:"true"`

	// 购买时长。默认：1。不支持购买到月末
	Quantity *int `required:"false"`

	// 防火墙ID，默认：Web推荐防火墙。如何查询SecurityGroupId请参见 [DescribeFirewall](api/unet-api/describe_firewall.html)。
	SecurityGroupId *string `required:"false"`

	// 子网 ID。默认为当前地域的默认子网。
	SubnetId *string `required:"false"`

	// VPC ID。默认为当前地域的默认VPC。
	VPCId *string `required:"false"`
}

// CreateULHostInstanceResponse is response schema for CreateULHostInstance action
type CreateULHostInstanceResponse struct {
	response.CommonBase

	// 错误信息
	Message string

	// 实例ID
	ULHostId string
}

// NewCreateULHostInstanceRequest will create request of CreateULHostInstance action.
func (c *UCompShareClient) NewCreateULHostInstanceRequest() *CreateULHostInstanceRequest {
	req := &CreateULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

/*
API: CreateULHostInstance

创建轻量应用云主机
*/
func (c *UCompShareClient) CreateULHostInstance(req *CreateULHostInstanceRequest) (*CreateULHostInstanceResponse, error) {
	var err error
	var res CreateULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("CreateULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeULHostBundlesRequest is request schema for DescribeULHostBundles action
type DescribeULHostBundlesRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

}

// DescribeULHostBundlesResponse is response schema for DescribeULHostBundles action
type DescribeULHostBundlesResponse struct {
	response.CommonBase

	// 套餐列表
	Bundles []Bundle

	// 错误信息
	Message string
}

// NewDescribeULHostBundlesRequest will create request of DescribeULHostBundles action.
func (c *UCompShareClient) NewDescribeULHostBundlesRequest() *DescribeULHostBundlesRequest {
	req := &DescribeULHostBundlesRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeULHostBundles

获取轻量应用云主机套餐列表
*/
func (c *UCompShareClient) DescribeULHostBundles(req *DescribeULHostBundlesRequest) (*DescribeULHostBundlesResponse, error) {
	var err error
	var res DescribeULHostBundlesResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeULHostBundles", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// DescribeULHostInstanceRequest is request schema for DescribeULHostInstance action
type DescribeULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 返回数据长度，默认为20，最大100
	Limit *int `required:"false"`

	// 列表起始位置偏移量，默认为0
	Offset *int `required:"false"`

	// 【数组】轻量应用云主机ID。
	ULHostIds []string `required:"false"`
}

// DescribeULHostInstanceResponse is response schema for DescribeULHostInstance action
type DescribeULHostInstanceResponse struct {
	response.CommonBase

	// 错误信息
	Message string

	// 实例列表
	ULHostInstanceSets []ULHostInstanceSet
}

// NewDescribeULHostInstanceRequest will create request of DescribeULHostInstance action.
func (c *UCompShareClient) NewDescribeULHostInstanceRequest() *DescribeULHostInstanceRequest {
	req := &DescribeULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: DescribeULHostInstance

获取轻量应用云主机列表
*/
func (c *UCompShareClient) DescribeULHostInstance(req *DescribeULHostInstanceRequest) (*DescribeULHostInstanceResponse, error) {
	var err error
	var res DescribeULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("DescribeULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetULHostInstancePriceRequest is request schema for GetULHostInstancePrice action
type GetULHostInstancePriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 套餐ID
	BundleId *string `required:"true"`

	// 获取指定计费模式的价格。枚举值：\\ > Year，按年付费； \\ > Month。未指定时，返回所有计费模式价格
	ChargeType *string `required:"false"`

	// 购买台数，范围[1,5]。默认：1
	Count *int `required:"false"`

	// 购买时长。默认: 1。不支持购买到月末
	Quantity *int `required:"false"`
}

// GetULHostInstancePriceResponse is response schema for GetULHostInstancePrice action
type GetULHostInstancePriceResponse struct {
	response.CommonBase

	// 错误信息
	Message string

	//
	PriceSet []ULHostPriceSet
}

// NewGetULHostInstancePriceRequest will create request of GetULHostInstancePrice action.
func (c *UCompShareClient) NewGetULHostInstancePriceRequest() *GetULHostInstancePriceRequest {
	req := &GetULHostInstancePriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetULHostInstancePrice

获取轻量应用云主机套餐价格
*/
func (c *UCompShareClient) GetULHostInstancePrice(req *GetULHostInstancePriceRequest) (*GetULHostInstancePriceResponse, error) {
	var err error
	var res GetULHostInstancePriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetULHostInstancePrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// GetULHostRenewPriceRequest is request schema for GetULHostRenewPrice action
type GetULHostRenewPriceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 计费类型。支持：Year/Month；默认：Month
	ChargeType *string `required:"false"`

	// ULHost实例ID
	ULHostId *string `required:"true"`
}

// GetULHostRenewPriceResponse is response schema for GetULHostRenewPrice action
type GetULHostRenewPriceResponse struct {
	response.CommonBase

	//
	PriceSet []ULHostPriceSet
}

// NewGetULHostRenewPriceRequest will create request of GetULHostRenewPrice action.
func (c *UCompShareClient) NewGetULHostRenewPriceRequest() *GetULHostRenewPriceRequest {
	req := &GetULHostRenewPriceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: GetULHostRenewPrice

获取主机续费价格
*/
func (c *UCompShareClient) GetULHostRenewPrice(req *GetULHostRenewPriceRequest) (*GetULHostRenewPriceResponse, error) {
	var err error
	var res GetULHostRenewPriceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("GetULHostRenewPrice", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ModifyULHostAttributeRequest is request schema for ModifyULHostAttribute action
type ModifyULHostAttributeRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 名称。和Remark至少选择一个进行修改
	Name *string `required:"false"`

	// 备注。和Name至少选择一个进行修改
	Remark *string `required:"false"`

	// ULHost实例Id
	ULHostId *string `required:"true"`
}

// ModifyULHostAttributeResponse is response schema for ModifyULHostAttribute action
type ModifyULHostAttributeResponse struct {
	response.CommonBase

	// 错误信息
	Message string

	// ULHost实例Id
	ULHostId string
}

// NewModifyULHostAttributeRequest will create request of ModifyULHostAttribute action.
func (c *UCompShareClient) NewModifyULHostAttributeRequest() *ModifyULHostAttributeRequest {
	req := &ModifyULHostAttributeRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ModifyULHostAttribute

修改指定ULHost实例属性信息，包含名称和备注
*/
func (c *UCompShareClient) ModifyULHostAttribute(req *ModifyULHostAttributeRequest) (*ModifyULHostAttributeResponse, error) {
	var err error
	var res ModifyULHostAttributeResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ModifyULHostAttribute", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// PoweroffULHostInstanceRequest is request schema for PoweroffULHostInstance action
type PoweroffULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// ULHost实例ID
	ULHostId *string `required:"true"`
}

// PoweroffULHostInstanceResponse is response schema for PoweroffULHostInstance action
type PoweroffULHostInstanceResponse struct {
	response.CommonBase

	// ULHost实例ID
	ULHostId string
}

// NewPoweroffULHostInstanceRequest will create request of PoweroffULHostInstance action.
func (c *UCompShareClient) NewPoweroffULHostInstanceRequest() *PoweroffULHostInstanceRequest {
	req := &PoweroffULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: PoweroffULHostInstance

直接关闭UHost实例电源，无需等待实例正常关闭。
*/
func (c *UCompShareClient) PoweroffULHostInstance(req *PoweroffULHostInstanceRequest) (*PoweroffULHostInstanceResponse, error) {
	var err error
	var res PoweroffULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("PoweroffULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// RebootULHostInstanceRequest is request schema for RebootULHostInstance action
type RebootULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// ULHost实例ID
	ULHostId *string `required:"true"`
}

// RebootULHostInstanceResponse is response schema for RebootULHostInstance action
type RebootULHostInstanceResponse struct {
	response.CommonBase

	// ULHost实例ID
	ULHostId string
}

// NewRebootULHostInstanceRequest will create request of RebootULHostInstance action.
func (c *UCompShareClient) NewRebootULHostInstanceRequest() *RebootULHostInstanceRequest {
	req := &RebootULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: RebootULHostInstance

重新启动UHost实例。
*/
func (c *UCompShareClient) RebootULHostInstance(req *RebootULHostInstanceRequest) (*RebootULHostInstanceResponse, error) {
	var err error
	var res RebootULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("RebootULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ReinstallULHostInstanceRequest is request schema for ReinstallULHostInstance action
type ReinstallULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 镜像Id。暂不支持使用自定义镜像重装
	ImageId *string `required:"true"`

	// 登陆密码
	Password *string `required:"true"`

	// 实例Id
	ULHostId *string `required:"true"`
}

// ReinstallULHostInstanceResponse is response schema for ReinstallULHostInstance action
type ReinstallULHostInstanceResponse struct {
	response.CommonBase

	// 错误信息
	Message string

	// 实例Id
	ULHostId string
}

// NewReinstallULHostInstanceRequest will create request of ReinstallULHostInstance action.
func (c *UCompShareClient) NewReinstallULHostInstanceRequest() *ReinstallULHostInstanceRequest {
	req := &ReinstallULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ReinstallULHostInstance

重装轻量应用云主机
*/
func (c *UCompShareClient) ReinstallULHostInstance(req *ReinstallULHostInstanceRequest) (*ReinstallULHostInstanceResponse, error) {
	var err error
	var res ReinstallULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ReinstallULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// ResetULHostInstancePasswordRequest is request schema for ResetULHostInstancePassword action
type ResetULHostInstancePasswordRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// ULHost新密码（密码格式使用BASE64编码）
	Password *string `required:"true"`

	// ULHost实例ID
	ULHostId *string `required:"true"`
}

// ResetULHostInstancePasswordResponse is response schema for ResetULHostInstancePassword action
type ResetULHostInstancePasswordResponse struct {
	response.CommonBase

	// ULHost实例ID
	ULHostId string
}

// NewResetULHostInstancePasswordRequest will create request of ResetULHostInstancePassword action.
func (c *UCompShareClient) NewResetULHostInstancePasswordRequest() *ResetULHostInstancePasswordRequest {
	req := &ResetULHostInstancePasswordRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: ResetULHostInstancePassword

重置轻量应用云主机管理员密码。
*/
func (c *UCompShareClient) ResetULHostInstancePassword(req *ResetULHostInstancePasswordRequest) (*ResetULHostInstancePasswordResponse, error) {
	var err error
	var res ResetULHostInstancePasswordResponse

	reqCopier := *req

	err = c.Client.InvokeAction("ResetULHostInstancePassword", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StartULHostInstanceRequest is request schema for StartULHostInstance action
type StartULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// ULHost实例ID
	ULHostId *string `required:"true"`
}

// StartULHostInstanceResponse is response schema for StartULHostInstance action
type StartULHostInstanceResponse struct {
	response.CommonBase

	// ULHost实例ID
	ULHostId string
}

// NewStartULHostInstanceRequest will create request of StartULHostInstance action.
func (c *UCompShareClient) NewStartULHostInstanceRequest() *StartULHostInstanceRequest {
	req := &StartULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StartULHostInstance

启动处于关闭状态的UHost实例。
*/
func (c *UCompShareClient) StartULHostInstance(req *StartULHostInstanceRequest) (*StartULHostInstanceResponse, error) {
	var err error
	var res StartULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StartULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// StopULHostInstanceRequest is request schema for StopULHostInstance action
type StopULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// ULHost实例ID。
	ULHostId *string `required:"true"`
}

// StopULHostInstanceResponse is response schema for StopULHostInstance action
type StopULHostInstanceResponse struct {
	response.CommonBase

	// ULHost实例ID
	ULHostId string
}

// NewStopULHostInstanceRequest will create request of StopULHostInstance action.
func (c *UCompShareClient) NewStopULHostInstanceRequest() *StopULHostInstanceRequest {
	req := &StopULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: StopULHostInstance

指停止处于运行状态的ULHost实例
*/
func (c *UCompShareClient) StopULHostInstance(req *StopULHostInstanceRequest) (*StopULHostInstanceResponse, error) {
	var err error
	var res StopULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("StopULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}

// TerminateULHostInstanceRequest is request schema for TerminateULHostInstance action
type TerminateULHostInstanceRequest struct {
	request.CommonBase

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](https://docs.ucloud.cn/api/summary/get_project_list)
	// ProjectId *string `required:"false"`

	// [公共参数] 地域。 参见 [地域和可用区列表](https://docs.ucloud.cn/api/summary/regionlist)
	// Region *string `required:"true"`

	// 删除主机时是否同时删除挂载的数据盘。默认为false。
	ReleaseUDisk *bool `required:"false"`

	// ULHost资源Id
	ULHostId *string `required:"true"`
}

// TerminateULHostInstanceResponse is response schema for TerminateULHostInstance action
type TerminateULHostInstanceResponse struct {
	response.CommonBase

	// 用于判断主机删除时是否进入回收站。放入回收站:"Yes", 彻底删除：“No”。
	InRecycle string

	// ULHost 实例 Id
	ULHostId string
}

// NewTerminateULHostInstanceRequest will create request of TerminateULHostInstance action.
func (c *UCompShareClient) NewTerminateULHostInstanceRequest() *TerminateULHostInstanceRequest {
	req := &TerminateULHostInstanceRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

/*
API: TerminateULHostInstance

删除指定数据中心的ULHost实例。
*/
func (c *UCompShareClient) TerminateULHostInstance(req *TerminateULHostInstanceRequest) (*TerminateULHostInstanceResponse, error) {
	var err error
	var res TerminateULHostInstanceResponse

	reqCopier := *req

	err = c.Client.InvokeAction("TerminateULHostInstance", &reqCopier, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
